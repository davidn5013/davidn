alias=doskey /macros:all | findstr $*
alias_create=doskey $* 
alias_save=doskey /macros | sort >"%USERPROFILE%\.doskey_aliases.txt" 
c="%USERPROFILE%\AppData\Local\Programs\Microsoft VS Code\bin\code.cmd" >nul 2>&1 $*
cat=bat $*
ccd=echo cd "%cd%"|clip
cd=pushd $*
clink="C:\Program Files (x86)\clink\clink_x64.exe" $*
cpuload=Powershell "[string][int](Get-Counter '\Processor(*)\% Processor Time').Countersamples[0].CookedValue + '%'"
create_public_repo=gh repo create --public --source . --push 
d=dopus $* 
flconf=flexprompt cofigure 
fzf=((setvar _fzfout fzf) && ($* %_fzfout%)) 
ga=git add $* 
gb=go vet $*&go build $*
gbi=gchk $1 && go install -gcflags="-m=2" --ldflags="-s -w -race" -trimpath $*
gc=git commit -m "$*" 
git_set_main_up=git push --set-upstream origin main 
gitremote=git remote show origin 
gl=git log --oneline 
gocurr=echo "Opening current project as go project"&pcurr&&gvim *.go *.md *.txt */*/*.go
god=for /f %i in ('go list std^|fzf --print0 --preview="go doc {}"') do @echo %i
gonew=echo Creating new go-program:github.com/davidn5013/$1&&mkcd $1&&go mod init github.com/davidn5013/$1&&! >nul pcurr .&&gvim.exe --remote-silent main.go
gonewm=echo Creating new go-module:github.com/davidn5013/$1&&mkcd $1&&go mod init github.com/davidn5013/$1&&md cmd&&md cmd\$1&&echo >$1.go package $1&&! >nul pcurr .&&gvim.exe --remote-silent $1_test.go $1.go cmd\$1\main.go
goset=go env -w CGO_ENABLED=0 GOFLAGS=-buildvcs=false 
gr=go vet $*&go run $*
grd=docker run --rm --name golang_run -v %cd%:/s golang go run /s/$*
grep=grep --color=auto --exclude-dir=.git\ --exclude=*.exe --exclude=*.zip -i -rn $* 
gs=git status -s $*
gt=go vet $*&go test -v -run $* --bench . --benchmem 
gv=gvim.exe --remote-silent $*
hide=attrib +h $* 
history="C:\Program Files (x86)\clink\clink_x64.exe" history $*
less=less -r $* 
ll=logo-ls -1 
ln=mklink $* 
md="C:\Program Files\Git\usr\bin\mkdir.exe" -p -v $* 
mk="C:\Program Files\Git\usr\bin\mkdir.exe" -p -v $* 
mkcd="C:\Program Files\Git\usr\bin\mkdir.exe" -p -v $*$Tcd $*
n="C:\Program Files\Neovim\bin\nvim.exe" $*
na="C:\Program Files\Vim\vim90\vim.exe" "%userprofile%\.doskey_aliases.txt"
nb="C:\Program Files\Vim\vim90\vim.exe" "%userprofile%\.shell-startup.cmd" 
nc="C:\Program Files\Vim\vim90\vim.exe" "%dropbox%\Davids fritids dokument\Clipboard archive\clipboard.txt"
newmakefile=cp "C:\Users\David Nilsson\Dropbox\Dev\Privat\go\src\.githubTempl\makefile" .  
nn="C:\Program Files\Vim\vim90\vim.exe" -c "normal G" "%dropbox%\Davids fritids dokument\Clipboard archive\nottoself.txt"
nv=nvim-qt $*
pop=popd
pwd=echo %cd%
rg=rg --color always --vimgrep $* 
rgl=rg --color always --vimgrep $*|less -r 
rmdir=rmdir /q/s $* 
rmtmp=rm -i -r tmp tmpDev
time=ptime $* 
traschsize=powershell "(Get-ChildItem -LiteralPath 'C:\$Recycle.Bin' -File -Force -Recurse -ErrorAction SilentlyContinue |Measure-Object -Property Length -Sum).Sum"
ubuntu=wsl $* 
unhide=attrib -h $*  
v="C:\Program Files\Vim\vim90\vim.exe" $* 
vc="C:\Program Files\Vim\vim90\vim.exe" --noplugin $* 
vimdiff=wt new-tab cmd /d/c "C:\Program Files\Vim\vim90\vim.exe" -d $*
vr="C:\Program Files\Vim\vim90\vim.exe" --remote $* 
watch=watchrun -care main.go -interval 800ms bg "go vet .& go test . & go run ."
wslkill=wsl -t Ubuntu
wsllst=wsl --list --verbose --all
~=pushd "%userprofile%"
